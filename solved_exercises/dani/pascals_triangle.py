"""
Pascalâ€™s triangle is a nice shape formed by the arrangement of numbers in a
triangular array, constructed by summing adjacent elements in preceding rows.
Each number is generated by taking the sum of the two numbers above it.
The outside edges of this triangle are always 1.

The expected triangle is shown below:

>>>pascal_triangle(6)
[1]
[1, 1]
[1, 2, 1]
[1, 3, 3, 1]
[1, 4, 6, 4, 1]
[1, 5, 10, 10, 5, 1]

"""

def calculate_pascal_row(data):
    result = []
    for i, elem in enumerate(data):
        if i == 0:
            result.append(elem)
        if i + 1 <= len(data) - 1:
            result.append(data[i] + data[i + 1])    
        if i == len(data) - 1:
            result.append(elem)
    return result

def pascal_triangle(size):
    data = [1]
    for _ in range(size):
        data = calculate_pascal_row(data) 
        print(data)


def main():
    size = int(input("Enter size for pascal triangle:"))
    if size < 1:
        raise ValueError("size must be a positive integer greater than 0.")
    pascal_triangle(size)

main()
