"""
Pascalâ€™s triangle is a nice shape formed by the arrangement of numbers in a
triangular array, constructed by summing adjacent elements in preceding rows.
Each number is generated by taking the sum of the two numbers above it.
The outside edges of this triangle are always 1.
The expected triangle is shown below:
>>> pascal_triangle(6)
[1]
[1, 1]
[1, 2, 1]
[1, 3, 3, 1]
[1, 4, 6, 4, 1]
[1, 5, 10, 10, 5, 1]
"""


def calculate_line(previous_line):
    line = list()
    line.append(1)
    for left, right in zip(previous_line[:-1], previous_line[1:]):
        line.append(left + right)
    line.append(1)
    return line


def generate_pascal_triangle(lines_count):
    triangle = list()
    triangle.append([1])

    for i in range(lines_count - 1):
        triangle.append(calculate_line(triangle[-1]))

    return triangle


def print_triangle(triangle):
    print("Generated triangle with size ", len(triangle))
    for line in triangle:
        print(line)


def main():
    triangle = generate_pascal_triangle(4)
    print_triangle(triangle)
    triangle = generate_pascal_triangle(1)
    print_triangle(triangle)
    triangle = generate_pascal_triangle(2)
    print_triangle(triangle)


if __name__ == "__main__":
    main()
